import Head from "next/head";
import type { GetServerSideProps, InferGetServerSidePropsType } from "next";

type User = {
  id: number;
  username: string;
  firstName: string;
  middleName: string;
  lastName: string;
  effectiveName: string;
  email: string;
  status: boolean;
  registrationTime: string;
};

type IPage = {
  collection: User[];
  page: number;
  count: number;
};

type Props = {
  result: IPage;
};

const host = process.env.API_HOST as string;

export const getServerSideProps: GetServerSideProps<Props> = async ({
  res,
  query,
}) => {
  const response = await fetch(`${host}/users`);
  const result = (await response.json()) as IPage;

  return {
    props: {
      result,
    },
  };
};

export default function Home({
  result,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        <title>PCCW Frontend</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="relative flex h-screen items-center justify-center bg-black px-10">
        <div className="relative  overflow-x-auto">
          <table className="w-full text-left text-sm text-gray-500 dark:text-gray-400">
            <thead className="bg-gray-50 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-6 py-3">
                  Username
                </th>
                <th scope="col" className="px-6 py-3">
                  Name
                </th>
                <th scope="col" className="px-6 py-3">
                  Email
                </th>
                <th scope="col" className="px-6 py-3">
                  Status
                </th>
              </tr>
            </thead>
            <tbody>
              {result.collection.map((u) => {
                return (
                  <tr
                    key={u.id}
                    className="border-b bg-white dark:border-gray-700 dark:bg-gray-800"
                  >
                    <th
                      scope="row"
                      className="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white"
                    >
                      {u.username}
                    </th>
                    <td className="px-6 py-4">{u.effectiveName}</td>
                    <td className="px-6 py-4">{u.email}</td>
                    <td className="px-6 py-4">
                      {u.status ? "Verified" : "Unverified"}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
}
